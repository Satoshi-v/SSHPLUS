#!/bin/bash
#===================================================
# SCRIPT: BOT SSH PLUS
# DATA ATT: 18 de JuL 2022
# DESENVOLVIDO POR: TURBONETPN2023
# API SHELLBOT: ORION
# CONTATO TELEGRAM: http://t.me/TURBONET2023
# CANAL TELEGRAM: http://t.me/TURBONET2023
#===================================================
[[ ! -d /etc/SSHPlus ]] && exit 0
[[ ! -d /etc/bot ]] && exit 0
source ShellBot.sh

api_bot=$1
id_admin=$2

[[ -z $api_bot ]] && exit 0
[[ -z $id_admin ]] && exit 0
[[ ! -e /usr/lib/licence ]] && exit 0

ativos='/etc/bot/lista_ativos'
suspensos='/etc/bot/lista_suspensos'

ShellBot.init --token "$api_bot" --monitor --return map --flush

keyboard1=$(ShellBot.InlineKeyboardButton -button '👤 CREAR USUARIO' -callback_data 'criar_user')
keyboard1=$(ShellBot.InlineKeyboardButton -button '🗑 REMOVER USUARIO' -callback_data 'remover_user' -new_row)
keyboard1=$(ShellBot.InlineKeyboardButton -button '🔐 ALTERAR SENHA' -callback_data 'alterar_senha')
keyboard1=$(ShellBot.InlineKeyboardButton -button '⏳ ALTERAR DATA' -callback_data 'alterar_data' -new_row)
keyboard1=$(ShellBot.InlineKeyboardButton -button '📊 MONITOR ONLINE' -callback_data 'monitor_online')
keyboard1=$(ShellBot.InlineKeyboardButton -button '📋 LISTAR USUARIOS' -callback_data 'listar_users' -new_row)
keyboard1=$(ShellBot.InlineKeyboardButton -button '📤 HOSPEDAR ARQUIVO' -callback_data 'hospedar_arquivo')
keyboard1=$(ShellBot.InlineKeyboardButton -button '🗑️ REMOVER ARQUIVO' -callback_data 'remover_arquivo' -new_row)
keyboard1=$(ShellBot.InlineKeyboardButton -button '📊 RELATORIO' -callback_data 'relatorio')
keyboard1=$(ShellBot.InlineKeyboardButton -button '➕ CREAR REVENDEDOR' -callback_data 'criar_revenda' -new_row)
keyboard1=$(ShellBot.InlineKeyboardButton -button '🗑️ REMOVER REVENDEDOR' -callback_data 'remover_revenda')
keyboard1=$(ShellBot.InlineKeyboardButton -button '🔄 RENEVAR REVENDEDOR' -callback_data 'renew_revenda' -new_row)
keyboard1=$(ShellBot.InlineKeyboardButton -button '⚠️ SUSPENDER REVENDEDOR' -callback_data 'suspender_revenda')
keyboard1=$(ShellBot.InlineKeyboardButton -button '✅ ATIVAR REVENDEDOR' -callback_data 'ativar_revenda' -new_row)
keyboard1=$(ShellBot.InlineKeyboardButton -button '💾 RESTAURAR BACKUP' -callback_data 'restaurar_bkp')

keyboard2=$(ShellBot.InlineKeyboardButton -button '👤 CREAR USUARIO' -callback_data 'criar_user')
keyboard2=$(ShellBot.InlineKeyboardButton -button '🗑 REMOVER USUARIO' -callback_data 'remover_user' -new_row)
keyboard2=$(ShellBot.InlineKeyboardButton -button '🔐 ALTERAR SENHA' -callback_data 'alterar_senha')
keyboard2=$(ShellBot.InlineKeyboardButton -button '⏳ ALTERAR DATA' -callback_data 'alterar_data' -new_row)
keyboard2=$(ShellBot.InlineKeyboardButton -button '📊 MONITOR ONLINE' -callback_data 'monitor_online')
keyboard2=$(ShellBot.InlineKeyboardButton -button '📋 LISTAR USUARIOS' -callback_data 'listar_users' -new_row)
keyboard2=$(ShellBot.InlineKeyboardButton -button '📤 HOSPEDAR ARQUIVO' -callback_data 'hospedar_arquivo')
keyboard2=$(ShellBot.InlineKeyboardButton -button '🗑️ REMOVER ARQUIVO' -callback_data 'remover_arquivo' -new_row)
keyboard2=$(ShellBot.InlineKeyboardButton -button '📊 RELATORIO' -callback_data 'relatorio')

keyboard3=$(ShellBot.InlineKeyboardButton -button '👤 CREAR USUARIO' -callback_data 'criar_user')
keyboard3=$(ShellBot.InlineKeyboardButton -button '🗑 REMOVER USUARIO' -callback_data 'remover_user' -new_row)
keyboard3=$(ShellBot.InlineKeyboardButton -button '🔐 ALTERAR SENHA' -callback_data 'alterar_senha')
keyboard3=$(ShellBot.InlineKeyboardButton -button '⏳ ALTERAR DATA' -callback_data 'alterar_data' -new_row)
keyboard3=$(ShellBot.InlineKeyboardButton -button '📊 MONITOR ONLINE' -callback_data 'monitor_online')
keyboard3=$(ShellBot.InlineKeyboardButton -button '📋 LISTAR USUARIOS' -callback_data 'listar_users' -new_row)

fun_menu() {
    [[ "${message_from_id[$id]}" == "$id_admin" ]] && {
        local env_msg
        env_msg="╔══════════•⊱✦⊰•══════════╗"
        env_msg+="<b> 🔥 BOT WEBCONT 🔥</b>"
        env_msg+="╚══════════•⊱✦⊰•══════════╝"
        env_msg+="⚠️ <i>SELECCIONE UNA OPCIÓN A CONTINUACIÓN !</i>"
        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} --text "$env_msg" \
            --reply_markup "$keyboard1" \
            --parse_mode html
        return 0
    }
    [[ -d /etc/bot/suspensos/${message_from_username} ]] && {
        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
            --text "$(echo -e "🚫 VC ESTA SUSPENSO 🚫\nCONTATE O ADMINISTRADOR")" \
            --parse_mode html
        return 0
    }
    if [[ "$(grep -w "${message_from_username}" $ativos| grep -wc 'revenda')" != '0' ]]; then
        local env_msg
        env_msg="╔════════•⊱✦⊰•════════╗"
        env_msg+="<b> 🔥 BOT WEBCONT 🔥</b>"
        env_msg+="╚════════•⊱✦⊰•════════╝"
        env_msg+="⚠️ <i>SELECCIONE UNA OPCIÓN A CONTINUACIÓN !</i>"
        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} --text "$env_msg" \
            --reply_markup "$keyboard2" \
            --parse_mode html
        return 0
    elif [[ "$(grep -w "${message_from_username}" $ativos| grep -wc 'subrevenda')" != '0' ]]; then
        local env_msg
        env_msg="╔═══════•⊱✦⊰•═══════╗"
        env_msg+="<b> 🔥 BOT WEBCONT 🔥</b>"
        env_msg+="╚═══════•⊱✦⊰•═══════╝"
        env_msg+="⚠️ <i>SELECCIONE UNA OPCIÓN A CONTINUACIÓN !</i>"
        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} --text "$env_msg" \
            --reply_markup "$keyboard3" \
            --parse_mode html
        return 0
    else
        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
            --text "$(echo -e 🚫 ACESSO NEGADO 🚫)" \
            --parse_mode html
        return 0
    fi
}

msg_bem_vindo() {
    local msg
    msg="✌😎 Hola <b>${message_from_first_name[$id]}</b>\nBIENVENIDO(a)"
    msg+="\nPara ingresar al menu\nhaga clic o ejecute [ /menu ]"
    ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
        --text "$(echo -e $msg)" \
        --parse_mode html
    return 0
}

fun_verif_limite_rev() {
    _userrev=$1
    [[ "$(grep -w "$_userrev" $ativos| awk '{print $NF}')" == 'revenda' ]] && {
        echo $_userrev
        [[ $(grep -wc 'SUBREVENDA' /etc/bot/revenda/$_userrev/$_userrev) != '0' ]] && {
            _limsomarev2=$(echo "$(grep -w 'SUBREVENDA' /etc/bot/revenda/$_userrev/$_userrev| awk {'print $4'}| paste -s -d +| bc)" + "$(ls /etc/bot/revenda/$_userrev/usuarios| wc -l)" | bc)
        } || {
            _limsomarev2=$(ls /etc/bot/revenda/$_userrev/usuarios| wc -l)
        }
        _result=$_limsomarev2
    }
    [[ "$(grep -w "$_userrev" $ativos| awk '{print $NF}')" == 'subrevenda' ]] && {
        [[ $(grep -wc 'SUBREVENDA' /etc/bot/revenda/$_userrev/$_userrev) != '0' ]] && {
            _limsomarev=$(echo "$(grep -w 'SUBREVENDA' /etc/bot/revenda/$_userrev/$_userrev| awk {'print $4'}| paste -s -d +| bc)" + "$(ls /etc/bot/revenda/$_userrev/usuarios| wc -l)" | bc)
        } || {
            _limsomarev=$(ls /etc/bot/revenda/$_userrev/usuarios| wc -l)
        }
        _result=$_limsomarev
    }
}

criar_user() {
    local file_user=$1
    [[ -z "$file_user" ]] && {
        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
            --text "$(echo -e '❌ Erro: Arquivo vazio ou inválido.')" \
            --parse_mode html
        _erro='1'
        return 1
    }

    local usuario=$(sed -n '1 p' $file_user | awk '{print $2}')
    local senha=$(sed -n '2 p' $file_user | awk '{print $2}')
    local limite=$(sed -n '3 p' $file_user | awk '{print $2}')
    local data=$(sed -n '4 p' $file_user | awk '{print $2}')
    local validade=$(echo "$data" | awk -F'/' '{print $2"/"$1"/"$3}' | xargs -i date -d'{}' +%Y-%m-%d)
    local info_data=$(date '+%d/%m/%C%y' -d "$data")

    [[ "$(awk -F : '$3 >= 1000 { print $1 }' /etc/passwd | grep -w "$usuario" | wc -l)" != '0' ]] && {
        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
            --text "$(echo -e '❌ Usuario ya existe en el sistema.')" \
            --parse_mode html
        return 1
    }

    if [[ "${message_from_id[$id]}" != "$id_admin" ]]; then
        _cont_limite=$(grep -w ${message_from_username} $ativos | awk '{print $4}')
        [[ -z $_cont_limite ]] && _cont_limite=0

        fun_verif_limite_rev ${message_from_username}
        _usuarios_criados=$_result

        if (( $_usuarios_criados >= _cont_limite )); then
            ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                --text "$(echo -e "⚠️ LIMITE DE CUPOS ALCANZADO!\n\n🔹 Cupos disponibles: 0\n🔹 No puedes crear más usuarios.")" \
                --parse_mode html
            return 1
        fi
    fi

    if /usr/sbin/useradd -M -N -s /bin/false "$usuario" -e "$validade"; then
        (echo "$senha"; echo "$senha") | passwd "$usuario" >/dev/null 2>&1
    else
        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
            --text "$(echo -e '❌ Error al crear el usuario en el sistema.')" \
            --parse_mode html
        return 1
    fi

    [[ "${message_from_id[$id]}" != "$id_admin" ]] && {
        echo "$usuario:$senha:$info_$limite" > /etc/bot/revenda/${message_from_username}/usuarios/$usuario
        echo "$usuario:$senha:$info_$limite" > /etc/bot/info-users/$usuario
    }

    echo "$usuario $limite" >> /root/usuarios.db
    echo "$senha" > /etc/SSHPlus/senha/$usuario

    [[ -e "/etc/openvpn/server.conf" ]] && {
        cd /etc/openvpn/easy-rsa/
        ./easyrsa build-client-full "$usuario" nopass
        newclient "$usuario"
    }

    ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
        --text "$(echo -e "✅ USUARIO CREADO CON ÉXITO ✅\n\n👤 Usuario: <code>$usuario</code>\n🔑 Contraseña: <code>$senha</code>\n📱 Dispositivos: $limite\n⏱️ Expira: $data")" \
        --parse_mode html

    if [[ -d "/etc/bot/arquivos" ]] && [[ "$(ls /etc/bot/arquivos | wc -l)" != '0' ]]; then
        for arqv in /etc/bot/arquivos/*; do
            ShellBot.sendDocument --chat_id ${message_from_id[$id]} \
                --document "@$arqv" \
                --caption "📌 Archivo adjunto al usuario creado." \
                --parse_mode html
        done
    fi
}

newclient() {
    cp /etc/openvpn/client-common.txt ~/$1.ovpn
    echo "<ca>" >>~/$1.ovpn
    cat /etc/openvpn/easy-rsa/pki/ca.crt >>~/$1.ovpn
    echo "</ca>" >>~/$1.ovpn
    echo "<cert>" >>~/$1.ovpn
    cat /etc/openvpn/easy-rsa/pki/issued/$1.crt >>~/$1.ovpn
    echo "</cert>" >>~/$1.ovpn
    echo "<key>" >>~/$1.ovpn
    cat /etc/openvpn/easy-rsa/pki/private/$1.key >>~/$1.ovpn
    echo "</key>" >>~/$1.ovpn
}

fun_teste() {
    t_user=$1
    t_time=$2
    dir_teste="/etc/SSHPlus/userteste/$t_user.sh"
    [[ -e $dir_teste ]] && rm $dir_teste
    touch $dir_teste
    cat >$dir_teste <<EOF
#!/bin/bash
# USUARIO TESTE
[[ \$(ps -u "$t_user"| grep -c sshd) != '0' ]] && pkill -u $t_user
userdel --force $t_user 2>/dev/null
grep -v ^$t_user[[:space:]] /root/usuarios.db > /tmp/ph ; cat /tmp/ph > /root/usuarios.db
[[ -e $dir_teste ]] && rm $dir_teste
rm /etc/SSHPlus/senha/$t_user > /dev/null 2>&1
rm /etc/SSHPlus/userteste/$t_user.sh
EOF
    chmod +x /etc/SSHPlus/userteste/$t_user.sh
    echo "/etc/SSHPlus/userteste/$t_user.sh" | at now + $t_time hour >/dev/null 2>&1
    [[ "$t_time" == '1' ]] && hrs="hora" || hrs="horas"
    [[ "$(ls /etc/bot/arquivos| wc -l)" != '0' ]] && {
        ShellBot.sendMessage --chat_id ${message_from_id[$id]} \
            --text "✅ *Usuario teste criado com sucesso*\n👤 <b>$t_user</b>\n⏱ <b>$t_time $hrs</b>\n📁 <b>Com arquivos</b>" \
            --parse_mode markdown
    } || {
        ShellBot.sendMessage --chat_id ${message_from_id[$id]} \
            --text "✅ *Usuario teste criado com sucesso*\n👤 <b>$t_user</b>\n⏱ <b>$t_time $hrs</b>\n📁 <b>Sem arquivos</b>" \
            --parse_mode markdown
    }
}

fun_verif_user() {
    _user=$1
    [[ -z "$_user" ]] && {
        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
            --text "$(echo -e "❌ Error: Usuario no informado.")" \
            --parse_mode html
        _erro='1'
        return 1
    }
    [[ ! -e /etc/bot/info-users/$_user ]] && {
        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
            --text "$(echo -e "❌ EL USUARIO NO EXISTE ❌")" \
            --parse_mode html
        _erro='1'
        return 1
    }
    _erro='0'
}

fun_del_user() {
    _user=$1
    fun_verif_user $_user
    [[ "$_erro" == '1' ]] && return 1

    piduser=$(ps -u "$_user"| grep sshd| cut -d? -f1)
    kill -9 $piduser >/dev/null 2>&1
    userdel --force "$_user" 2>/dev/null
    grep -v ^$_user[[:space:]] /root/usuarios.db >/tmp/ph
    cat /tmp/ph >/root/usuarios.db
    rm /etc/SSHPlus/senha/$_user >/dev/null 2>&1
    rm /etc/bot/revenda/${message_from_username}/usuarios/$_user >/dev/null 2>&1
    rm /etc/bot/info-users/$_user >/dev/null 2>&1
    [[ -e "/etc/openvpn/easy-rsa/pki/private/$_user.key" ]] && {
        cd /etc/openvpn/easy-rsa
        ./easyrsa --batch revoke $_user
        EASYRSA_CRL_DAYS=3650 ./easyrsa gen-crl
        rm -f /etc/openvpn/crl.pem
        cp /etc/openvpn/easy-rsa/pki/crl.pem /etc/openvpn/crl.pem
        chown nobody:nogroup /etc/openvpn/crl.pem
        systemctl restart openvpn-server@server
    }
    ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
        --text "✅ *Removido con éxito* 🚮" \
        --parse_mode markdown
}

fun_infu() {
    local info
    info+="\n👤 <b>$(awk -F: '{print $1}' /etc/bot/info-users/$1)</b>"
    info+="\n🔑 <b>$(awk -F: '{print $2}' /etc/bot/info-users/$1)</b>"
    info+="\n📱 <b>$(awk -F: '{print $4}' /etc/bot/info-users/$1)</b>"
    info+="\n⏱️ <b>$(awk -F: '{print $3}' /etc/bot/info-users/$1)</b>"
    ShellBot.sendMessage --chat_id $id_admin \
        --text "$(echo -e $info)" \
        --parse_mode html
}

ver_users() {
    if [[ "${callback_query_from_id[$id]}" == "$id_admin" ]]; then
        arq_info=/tmp/$(echo $RANDOM)
        local info_users
        info_users='=×=×=×=×=×=×=×=×=×=×=×=×=×='
        info_users+='<b>INFORMACION DE USUARIOS</b>'
        info_users+='=×=×=×=×=×=×=×=×=×=×=×=×=×='
        info_users+='⚠️ Se muestra en el siguiente formato:'
        info_users+='<code>USER PASS DISPOSITVS DIAS</code>'
        ShellBot.sendMessage --chat_id $id_admin \
            --text "$(echo -e $info_users)" \
            --parse_mode html

        while read user; do
            fun_infu $user
        done <<< "$(ls /etc/bot/info-users)"
    else
        ShellBot.answerCallbackQuery --callback_query_id ${callback_query_id[$id]} \
            --text "🚫 ACESSO NEGADO 🚫" \
            --show_alert
        return 0
    fi
}

verifica_acesso() {
    [[ "${message_from_id[$id]}" != "$id_admin" ]] && {
        [[ -d /etc/bot/suspensos/${message_from_username} ]] && {
            ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                --text "$(echo -e "🚫 VC ESTA SUSPENSO 🚫\nCONTATE O ADMINISTRADOR")" \
                --parse_mode html
            _erro='1'
            return 1
        }
        [[ "$(grep -w "${message_from_username}" $ativos| grep -wc 'revenda')" == '0' ]] && {
            [[ "$(grep -w "${message_from_username}" $ativos| grep -wc 'subrevenda')" == '0' ]] && {
                ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                    --text "$(echo -e 🚫 ACESSO NEGADO 🚫)" \
                    --parse_mode html
                _erro='1'
                return 1
            }
        }
    }
    _erro='0'
}

fun_online() {
    local info2
    for user in $(ls /etc/bot/revenda/${callback_query_from_username}/usuarios); do
        [[ "$(grep -w $user $database)" ]] && {
            info2+="\n👤 <b>$user</b> - <code>$(ps -u $user -o etime= | head -n1 | xargs)</code>"
        }
    done
    [[ -z "$info2" ]] && info2="\n❌ Ningun usuario online"
    ShellBot.sendMessage --chat_id ${callback_query_message_chat_id[$id]} \
        --text "$(echo -e $info2)" \
        --parse_mode html
}

monitor_online() {
    database="/root/usuarios.db"
    cad_onli=/tmp/$(echo $RANDOM)
    local info_on
    info_on='=×=×=×=×=×=×=×=×=×=×=×=×=×='
    info_on+='<b>MONITOR USUARIOS ONLINE</b>'
    info_on+='=×=×=×=×=×=×=×=×=×=×=×=×=×='
    info_on+='⚠️ Se muestra en el siguiente formato:'
    info_on+='<code>USUARIO ONLINE/TIEMPO</code>'
    ShellBot.sendMessage --chat_id ${callback_query_message_chat_id[$id]} \
        --text "$(echo -e $info_on)" \
        --parse_mode html

    if [[ "${callback_query_from_id[$id]}" == "$id_admin" ]]; then
        while read user; do
            [[ "$(ps -u $user -o pid= | wc -l)" != '0' ]] && {
                info_on+="\n👤 <b>$user</b> - <code>$(ps -u $user -o etime= | head -n1 | xargs)</code>"
            }
        done <<< "$(awk '{print $1}' $database)"
        [[ -z "$info_on" ]] && info_on="\n❌ Ningun usuario online"
        ShellBot.sendMessage --chat_id ${callback_query_message_chat_id[$id]} \
            --text "$(echo -e $info_on)" \
            --parse_mode html
    else
        fun_online
    fi
}

infouserbot() {
    ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
        --text "$(echo -e "🤖 BOT DE GERENCIAMENTO SSH\n\nDesenvolvido por: @TURBONET2023")" \
        --parse_mode html
}

sobremim() {
    ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
        --text "$(echo -e "👨‍💻 Desenvolvido por: @TURBONET2023\n\nCanal: @TURBONET2023")" \
        --parse_mode html
}

fun_down() {
    [[ "${callback_query_from_id[$id]}" != "$id_admin" ]] && {
        ShellBot.answerCallbackQuery --callback_query_id ${callback_query_id[$id]} \
            --text "🚫 ACESSO NEGADO 🚫" \
            --show_alert
        return 0
    }
    [[ ! -d /tmp/file ]] && mkdir /tmp/file
    ShellBot.sendMessage --chat_id ${callback_query_message_chat_id[$id]} \
        --text "[1] - AGREGAR ARCHIVO\n[2] - EXCLUIR ARCHIVO\nIngrese la opcion [1-2]" \
        --reply_markup "$(ShellBot.ForceReply)"
}

alterar_senha() {
    _user=$1
    _newpass=$2
    echo "$_newpass" | passwd "$_user" --stdin >/dev/null 2>&1
    sed -i "s;^.*:.*:$;$_user:$_newpass:;" /etc/bot/revenda/${message_from_username}/usuarios/$_user
    sed -i "s;^.*:.*:$;$_user:$_newpass:;" /etc/bot/info-users/$_user
    echo "$_newpass" > /etc/SSHPlus/senha/$_user
}

alterar_limite_user() {
    _user=$1
    _newlim=$2
    sed -i "s;$limite;$newlim;" /etc/bot/revenda/${message_from_username}/usuarios/$_user
    sed -i "s;$limite;$newlim;" /etc/bot/info-users/$_user
    sed -i "s;$usuario $limite;$usuario $newlim;" /root/usuarios.db
}

alterar_data_user() {
    _user=$1
    _newdate=$2
    inputdate=$(echo $_newdate | grep -E '[0-9]{2}/[0-9]{2}/[0-9]{4}' || true)
    [[ -z "$inputdate" ]] && {
        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
            --text "$(echo -e "❌ Error! Formato inválido. Use DD/MM/YYYY")" \
            --parse_mode html
        _erro='1'
        return 1
    }
    sysdate="$(echo -e "$inputdate"| awk -v FS=/ -v OFS=- '{print $3,$2,$1}')"
    today="$(date -d today +"%Y%m%d")"
    timemachine="$(date -d "$sysdate" +"%Y%m%d")"
    [ $today -ge $timemachine ] && {
        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
            --text "$(echo -e "❌ Error! Fecha pasada no permitida")" \
            --parse_mode html
        _erro='1'
        return 0
    }
    udata=$inputdate
    chage -E $sysdate $_user
    [[ -e /etc/bot/revenda/${message_from_username}/usuarios/$_user ]] && {
        data2=$(cat /etc/bot/info-users/$_user| awk -F : {'print $3'})
        sed -i "s;$data2;$udata;" /etc/bot/info-users/$_user
        sed -i "s;$data2;$udata;" /etc/bot/revenda/${message_from_username}/usuarios/$_user
    }
}

while true; do
    ShellBot.getUpdates --limit 100 --offset $(ShellBot.OffsetNext) --timeout 30
    for id in $(ShellBot.ListUpdates); do
        _erro='0'
        download_file=0
        verifica_acesso
        [[ ${message_chat_type[$id]} != 'private' ]] && continue

        if [[ ${message_text[$id]} ]]; then
            case ${message_text[$id]} in
                /start)
                    msg_bem_vindo
                    ;;
                /menu)
                    fun_menu
                    ;;
                /info)
                    infouserbot
                    ;;
                /bot|/sobre)
                    sobremim
                    ;;
            esac
        fi

        [[ ${message_document_file_id[$id]} ]] && file_id=${message_document_file_id[$id]} && download_file=1

        [[ $download_file -eq 1 ]] && {
            file_id=($file_id)
            ShellBot.getFile --file_id "${file_id[0]}"
            ShellBot.downloadFile --file_path ${return[file_path]} --dir "/tmp/file" && {
                mv /tmp/file/$(ls -1rt /tmp/file| tail -n1) /etc/bot/arquivos/${message_document_file_name}
                msg='✅ Archivo hospedado exitosamente.'
                msg+="\n📤 Informaciones"
                msg+="\n*Nombre*: ${message_document_file_name}"
                msg+="\n*Guardado en*: /etc/bot/arquivos"
                ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                    --text "$(echo -e "$msg")" \
                    --parse_mode markdown
            } || {
                ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                    --text "$(echo -e "❌ Error al recibir el archivo ❌")" \
                    --parse_mode markdown
            }
        }

        [[ ${callback_query_data[$id]} ]] && {
            case ${callback_query_data[$id]} in
                criar_user)
                    [[ "$(grep -w "${callback_query_from_username}" $ativos| grep -wc 'revenda')" != '0' ]] || \
                    [[ "$(grep -w "${callback_query_from_username}" $ativos| grep -wc 'subrevenda')" != '0' ]] || \
                    [[ "${callback_query_from_id[$id]}" == "$id_admin" ]] && {
                        ShellBot.sendMessage --chat_id ${callback_query_message_chat_id[$id]} \
                            --text "👤 CREAR USUARIO 👤\nNombre de usuario:" \
                            --reply_markup "$(ShellBot.ForceReply)"
                    } || {
                        ShellBot.answerCallbackQuery --callback_query_id ${callback_query_id[$id]} \
                            --text "🚫 ACESSO NEGADO 🚫" \
                            --show_alert
                    }
                    ;;
                remover_user)
                    ShellBot.sendMessage --chat_id ${callback_query_message_chat_id[$id]} \
                        --text "🗑 REMOVER USUARIO\nIngrese el nombre de usuario:" \
                        --reply_markup "$(ShellBot.ForceReply)"
                    ;;
                alterar_senha)
                    ShellBot.sendMessage --chat_id ${callback_query_message_chat_id[$id]} \
                        --text "🔐 Cambiar Contraseña 🔐\nNombre de usuario:" \
                        --reply_markup "$(ShellBot.ForceReply)"
                    ;;
                alterar_data)
                    ShellBot.sendMessage --chat_id ${callback_query_message_chat_id[$id]} \
                        --text "⏳ Alterar Fecha ⏳\nNombre de usuario:" \
                        --reply_markup "$(ShellBot.ForceReply)"
                    ;;
                monitor_online)
                    monitor_online
                    ;;
                listar_users)
                    ver_users
                    ;;
                hospedar_arquivo)
                    [[ "${callback_query_from_id[$id]}" == "$id_admin" ]] && {
                        ShellBot.sendMessage --chat_id ${callback_query_message_chat_id[$id]} \
                            --text "📤 HOSPEDAR ARCHIVOS 📤\nEnvíame el archivo:" \
                            --reply_markup "$(ShellBot.ForceReply)"
                    } || {
                        ShellBot.answerCallbackQuery --callback_query_id ${callback_query_id[$id]} \
                            --text "🚫 ACESSO NEGADO 🚫" \
                            --show_alert
                    }
                    ;;
                remover_arquivo)
                    [[ "$(ls /etc/bot/arquivos| wc -l)" != '0' ]] && {
                        msg_cli1="≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠"
                        msg_cli1+="🚀<b> ARCHIVOS HOSPEDADOS </b>"
                        msg_cli1+="≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠"
                        i=0
                        while read _file; do
                            i=$(($i + 1))
                            msg_cli1+="<b>[$i]</b> - $_file"
                        done <<< "$(ls /etc/bot/arquivos)"
                        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                            --text "$(echo -e "$msg_cli1")" \
                            --parse_mode html
                        ShellBot.sendMessage --chat_id ${message_from_id[$id]} \
                            --text "🗑 Eliminar archivo\nIngrese el número del archivo:" \
                            --reply_markup "$(ShellBot.ForceReply)"
                    } || {
                        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                            --text "$(echo -e "Nao existe arquivos disponiveis")" \
                            --parse_mode html
                    }
                    ;;
                relatorio)
                    [[ "${callback_query_from_id[$id]}" == "$id_admin" ]] && {
                        _cont_rev=$(grep -wc 'revenda' $ativos)
                        _cont_srev=$(grep -wc 'subrevenda' $ativos)
                        msg="📊 RELATORIO GERAL\n"
                        msg+="\nReven: $_cont_rev"
                        msg+="\nSubrev: $_cont_srev"
                        ShellBot.sendMessage --chat_id $id_admin \
                            --text "$(echo -e "$msg")" \
                            --parse_mode html
                        echo -e "INFORME DE LOS REVENDEDORES\nTotal: $_cont_rev - $(printf 'Fecha: %(%d/%m/%Y)T')"=×=×=×=×=×=×=×=×=×=×=×=×=×=×=×=" >/tmp/Informe.txt
                        while read _revlist; do
                            _nome_rev="$(echo $_revlist| awk '{print $2}')"
                            _limite_rev="$(echo $_revlist| awk '{print $4}')"
                            _data_rev="$(echo $_revlist| awk '{print $6}')"
                            [[ -e "/etc/bot/revenda/$_nome_rev/$_nome_rev" ]] && {
                                _dirsts='revenda'
                                _status='Activo'
                            } || {
                                _dirsts='suspensos'
                                _status='Suspendido'
                            }
                            _subrev="$(grep -wc SUBREVENDA /etc/bot/$_dirsts/$_nome_rev/$_nome_rev)"
                            fun_on() {
                                total_users=0
                                total_on=0
                                for user in $(ls /etc/bot/$_dirsts/$_nome_rev/usuarios); do
                                    ((total_users++))
                                    [[ "$(ps -u $user -o pid= | wc -l)" != '0' ]] && ((total_on++))
                                done
                            }
                            fun_on
                            echo "=×=×=×=×=×=×=×=×=×=×=×=×=×=×=×=" >>/tmp/Informe.txt
                            echo "REVENDEDOR: $_nome_rev" >>/tmp/Informe.txt
                            echo "ESTADO: $_status" >>/tmp/Informe.txt
                            echo "LIMITE: $_limite_rev" >>/tmp/Informe.txt
                            echo "DIAS RESTANTES: $_data_rev" >>/tmp/Informe.txt
                            echo "SSH CRIADAS: $total_users" >>/tmp/Informe.txt
                            echo "SSH ONLINE: $total_on" >>/tmp/Informe.txt
                            echo "SUB-REVENTAS: $_subrev" >>/tmp/Informe.txt
                            echo "=×=×=×=×=×=×=×=×=×=×=×=×=×=×=×=" >>/tmp/Informe.txt
                        done <<< "$(grep -w 'revenda' $ativos)"
                        ShellBot.sendDocument --chat_id $id_admin \
                            --document "@/tmp/Informe.txt" \
                            --caption "$(echo -e "$msg")" \
                            --parse_mode html
                    } || {
                        [[ "$(grep -w ${callback_query_from_username} $ativos| awk '{print $NF}')" == 'revenda' ]] && {
                            _revname=${callback_query_from_username}
                            _limrev=$(grep -w 'LIMITE_REVENDA' /etc/bot/revenda/$_revname/$_revname| awk '{print $2}')
                            _diarev=$(grep -w 'DIAS_REVENDA' /etc/bot/revenda/$_revname/$_revname| awk '{print $2}')
                            msg="📊 RELATORIO - $_revname\n"
                            msg+="\nLimite: $_limrev"
                            msg+="\nDias: $_diarev"
                            ShellBot.sendMessage --chat_id ${callback_query_message_chat_id[$id]} \
                                --text "$(echo -e "$msg")" \
                                --parse_mode html
                            echo "=×=×=×=×=×=×=×=×=×=×=×=×=×=×=×=" >/tmp/Relatorio-${callback_query_from_username}.txt
                            echo "REVENDEDOR: $_revname" >>/tmp/Relatorio-${callback_query_from_username}.txt
                            echo "LIMITE: $_limrev" >>/tmp/Relatorio-${callback_query_from_username}.txt
                            echo "DIAS RESTANTES: $_diarev" >>/tmp/Relatorio-${callback_query_from_username}.txt
                            while read _listsub; do
                                _usub="$(echo $_listsub| awk '{print $2}')"
                                _limsub="$(echo $_listsub| awk '{print $4}')"
                                _datasub="$(echo $_listsub| awk '{print $6}')"
                                fun_on() {
                                    total_users=0
                                    total_on=0
                                    for user in $(ls /etc/bot/revenda/$_usub/usuarios); do
                                        ((total_users++))
                                        [[ "$(ps -u $user -o pid= | wc -l)" != '0' ]] && ((total_on++))
                                    done
                                }
                                fun_on
                                echo "=×=×=×=×=×=×=×=×=×=×=×=×=×=×=×=" >>/tmp/Relatorio-${callback_query_from_username}.txt
                                echo "SUB-REV: $_usub" >>/tmp/Relatorio-${callback_query_from_username}.txt
                                echo "LIMITE: $_limsub" >>/tmp/Relatorio-${callback_query_from_username}.txt
                                echo "DIAS RESTANTES: $_datasub" >>/tmp/Relatorio-${callback_query_from_username}.txt
                                echo "SSH CRIADAS: $total_users" >>/tmp/Relatorio-${callback_query_from_username}.txt
                                echo "SSH ONLINE: $total_on" >>/tmp/Relatorio-${callback_query_from_username}.txt
                                echo "=×=×=×=×=×=×=×=×=×=×=×=×=×=×=×=" >>/tmp/Relatorio-${callback_query_from_username}.txt
                            done <<< "$(grep -w 'SUBREVENDA' /etc/bot/revenda/${callback_query_from_username}/${callback_query_from_username})"
                            ShellBot.sendDocument --chat_id ${callback_query_message_chat_id[$id]} \
                                --document "@/tmp/Relatorio-${callback_query_from_username}.txt" \
                                --caption "$(echo -e "$msg")" \
                                --parse_mode html
                        } || {
                            ShellBot.answerCallbackQuery --callback_query_id ${callback_query_id[$id]} \
                                --text "🚫 ACESSO NEGADO 🚫" \
                                --show_alert
                        }
                    }
                    ;;
                criar_revenda)
                    [[ "${callback_query_from_id[$id]}" == "$id_admin" ]] && {
                        ShellBot.sendMessage --chat_id ${callback_query_message_chat_id[$id]} \
                            --text "➕ CREAR REVENDEDOR\nIngrese el nombre [Ej: Nome]:\n" \
                            --reply_markup "$(ShellBot.ForceReply)"
                    } || {
                        ShellBot.answerCallbackQuery --callback_query_id ${callback_query_id[$id]} \
                            --text "🚫 ACESSO NEGADO 🚫" \
                            --show_alert
                    }
                    ;;
                remover_revenda)
                    ShellBot.sendMessage --chat_id ${callback_query_message_chat_id[$id]} \
                        --text "🗑️ REMOVER REVENDEDOR\nIngrese el username [Ej: @user]:\n" \
                        --reply_markup "$(ShellBot.ForceReply)"
                    ;;
                renew_revenda)
                    ShellBot.sendMessage --chat_id ${callback_query_message_chat_id[$id]} \
                        --text "🔄 RENEVAR REVENDEDOR\nIngrese el username [Ej: @user]:\n" \
                        --reply_markup "$(ShellBot.ForceReply)"
                    ;;
                suspender_revenda)
                    ShellBot.sendMessage --chat_id ${callback_query_message_chat_id[$id]} \
                        --text "⚠️ SUSPENDER REVENDEDOR\nIngrese el username [Ej: @user]:\n" \
                        --reply_markup "$(ShellBot.ForceReply)"
                    ;;
                ativar_revenda)
                    ShellBot.sendMessage --chat_id ${callback_query_message_chat_id[$id]} \
                        --text "✅ ATIVAR REVENDEDOR\nIngrese el username [Ej: @user]:\n" \
                        --reply_markup "$(ShellBot.ForceReply)"
                    ;;
                restaurar_bkp)
                    ShellBot.sendMessage --chat_id ${callback_query_message_chat_id[$id]} \
                        --text "💾 RESTAURAR BACKUP\nDeseja restaurar ? [si| nao]" \
                        --reply_markup "$(ShellBot.ForceReply)"
                    ;;
            esac
        }

        [[ ${message_reply_to_message_text[$id]} ]] && {
            case ${message_reply_to_message_text[$id]} in
                '👤 CREAR USUARIO 👤\nNombre de usuario:')
                    verifica_acesso
                    [[ "$_erro" == '1' ]] && break
                    CAD_ARQ=/tmp/cad.${message_from_id[$id]}
                    echo "Nome: ${message_text[$id]}" > $CAD_ARQ
                    ShellBot.sendMessage --chat_id ${message_from_id[$id]} \
                        --text 'Contraseña:' \
                        --reply_markup "$(ShellBot.ForceReply)"
                    ;;
                'Contraseña:')
                    verifica_acesso
                    [[ "$_erro" == '1' ]] && break
                    echo "Senha: ${message_text[$id]}" >> $CAD_ARQ
                    ShellBot.sendMessage --chat_id ${message_from_id[$id]} \
                        --text 'Dispositivos:' \
                        --reply_markup "$(ShellBot.ForceReply)"
                    ;;
                'Dispositivos:')
                    verifica_acesso
                    [[ "$_erro" == '1' ]] && break
                    [[ ${message_text[$id]} != ?(+|-)+([0-9]) ]] && {
                        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                            --text "$(echo -e "❌ Error !⚠️ Utilize solo numeros [Ej: 1]")" \
                            --parse_mode html
                        break
                    }
                    echo "Limite: ${message_text[$id]}" >> $CAD_ARQ
                    ShellBot.sendMessage --chat_id ${message_from_id[$id]} \
                        --text 'Dias de Validez [Ej: 30]:' \
                        --reply_markup "$(ShellBot.ForceReply)"
                    ;;
                'Dias de Validez [Ej: 30]:')
                    verifica_acesso
                    [[ "$_erro" == '1' ]] && break
                    [[ ${message_text[$id]} != ?(+|-)+([0-9]) ]] && {
                        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                            --text "$(echo -e "❌ Error !⚠️ Utilize solo numeros [Ej: 30]")" \
                            --parse_mode html
                        break
                    }
                    dias=${message_text[$id]}
                    data=$(date "+%d/%m/%Y" -d "+$dias days")
                    echo "Validade: $data" >> $CAD_ARQ
                    criar_user $CAD_ARQ
                    [[ "$(awk -F " " '/Nome/ {print $2}' $CAD_ARQ| xargs -I {} grep -wc {} /etc/passwd)" = '0' ]] && {
                        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                            --text "$(echo -e ❌ Error al crear usuario !)" \
                            --parse_mode html
                        break
                    }
                    [[ "$(ls /etc/bot/arquivos| wc -l)" != '0' ]] && {
                        ShellBot.sendMessage --chat_id ${message_from_id[$id]} \
                            --text '📥 ARCHIVOS DISPONIBLES 📥\n¿Quieres descargar? ¿Si o no?:' \
                            --reply_markup "$(ShellBot.ForceReply)"
                    } || {
                        ShellBot.sendMessage --chat_id ${message_from_id[$id]} \
                            --text "<b>✅ CREADO CON ÉXITO ✅</b>\n👤 User: <code>$(awk -F " " '/Nome/ {print $2}' $CAD_ARQ)</code>\n🔑 Pass: <code>$(awk -F " " '/Senha/ {print $2}' $CAD_ARQ)</code>\n📱 Dispositivos: $(awk -F " " '/Limite/ {print $2}' $CAD_ARQ)\n⏱️ Expira: $(awk -F " " '/Validade/ {print $2}' $CAD_ARQ)" \
                            --parse_mode html
                    }
                    ;;
                '📥 ARCHIVOS DISPONIBLES 📥\n¿Quieres descargar? ¿Si o no?:')
                    verifica_acesso
                    [[ "$_erro" == '1' ]] && break
                    [[ ${message_text[$id]} != ?(+|-)+([A-Za-z]) ]] && {
                        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                            --text "$(echo -e "❌ Opcion Invalida ❌\n⚠️ Utilice sólo letras [Ej: si o no]")" \
                            --parse_mode html
                        ShellBot.sendMessage --chat_id ${message_from_id[$id]} \
                            --text "<b>✅ CREADO CON ÉXITO ✅</b>\n👤 User: <code>$(awk -F " " '/Nome/ {print $2}' $CAD_ARQ)</code>\n🔑 Pass: <code>$(awk -F " " '/Senha/ {print $2}' $CAD_ARQ)</code>\n📱 Dispositivos: $(awk -F " " '/Limite/ {print $2}' $CAD_ARQ)\n⏱️ Expira: $(awk -F " " '/Validade/ {print $2}' $CAD_ARQ)" \
                            --parse_mode html
                        break
                    }
                    [[ "${message_text[$id]}" = @(Si|si|SI) ]] && {
                        msg_cli="≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠"
                        msg_cli+="<b>ARCHIVOS PRE-CONFIGURADOS </b>❗"
                        msg_cli+="≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠≠"
                        i=0
                        for _file in $(ls /etc/bot/arquivos); do
                            i=$(($i + 1))
                            msg_cli+="<b>[$i]</b> - $_file"
                        done
                        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                            --text "$(echo -e "$msg_cli")" \
                            --parse_mode html
                        ShellBot.sendMessage --chat_id ${message_from_id[$id]} \
                            --text 'Ingrese el número del archivo:' \
                            --reply_markup "$(ShellBot.ForceReply)"
                    } || {
                        ShellBot.sendMessage --chat_id ${message_from_id[$id]} \
                            --text "<b>✅ CREADO CON ÉXITO ✅</b>\n👤 User: <code>$(awk -F " " '/Nome/ {print $2}' $CAD_ARQ)</code>\n🔑 Pass: <code>$(awk -F " " '/Senha/ {print $2}' $CAD_ARQ)</code>\n📱 Dispositivos: $(awk -F " " '/Limite/ {print $2}' $CAD_ARQ)\n⏱️ Expira: $(awk -F " " '/Validade/ {print $2}' $CAD_ARQ)" \
                            --parse_mode html
                    }
                    ;;
                'Ingrese el número del archivo:')
                    verifica_acesso
                    [[ "$_erro" == '1' ]] && break
                    [[ ${message_text[$id]} != ?(+|-)+([0-9]) ]] && {
                        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                            --text "$(echo -e "❌ Opcion Invalida ❌\n⚠️ Utilice solo numeros [Ej: 1]")" \
                            --parse_mode html
                        break
                    }
                    Opc1=${message_text[$id]}
                    _DirArq=$(ls /etc/bot/arquivos)
                    i=0
                    _Pass=""
                    while read _Arq; do
                        i=$(expr $i + 1)
                        _oP=$i
                        [[ $i == [1-9] ]] && i=0$i && oP+=" 0$i"
                        echo -e "[$i] - $_Arq"
                        _Pass+="${_oP}:${_Arq}"
                    done <<<"${_DirArq}"
                    _file=$(echo -e "${_Pass}"| grep -E "\b$Opc1\b"| cut -d: -f2)
                    [[ -e /etc/bot/arquivos/$_file ]] && {
                        ShellBot.sendDocument --chat_id ${message_from_id[$id]} \
                            --document "@/etc/bot/arquivos/$_file" \
                            --caption "📌 Archivo adjunto al usuario creado." \
                            --parse_mode html
                    } || {
                        ShellBot.sendMessage --chat_id ${message_from_id[$id]} \
                            --text "$(echo -e "❌ Opcion invalida")" \
                            --parse_mode html
                    }
                    ShellBot.sendMessage --chat_id ${message_from_id[$id]} \
                        --text "<b>✅ CREADO CON ÉXITO ✅</b>\n👤 User: <code>$(awk -F " " '/Nome/ {print $2}' $CAD_ARQ)</code>\n🔑 Pass: <code>$(awk -F " " '/Senha/ {print $2}' $CAD_ARQ)</code>\n📱 Dispositivos: $(awk -F " " '/Limite/ {print $2}' $CAD_ARQ)\n⏱️ Expira: $(awk -F " " '/Validade/ {print $2}' $CAD_ARQ)" \
                        --parse_mode html
                    ;;
                '🗑 Eliminar archivo\nIngrese el número del archivo:')
                    [[ "${message_from_id[$id]}" != "$id_admin" ]] && break
                    Opc1=${message_text[$id]}
                    [[ ${message_text[$id]} != ?(+|-)+([0-9]) ]] && {
                        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                            --text "$(echo -e "❌ Error al Excluir archivo !⚠️ Utilize solo numeros [Ej: 1]")" \
                            --parse_mode html
                        break
                    } || {
                        _DirArq=$(ls /etc/bot/arquivos)
                        i=0
                        _Pass=""
                        while read _Arq; do
                            i=$(expr $i + 1)
                            _oP=$i
                            [[ $i == [1-9] ]] && i=0$i && oP+=" 0$i"
                            _Pass+="${_oP}:${_Arq}"
                        done <<<"${_DirArq}"
                        _file=$(echo -e "${_Pass}"| grep -E "\b$Opc1\b"| cut -d: -f2)
                        [[ -e /etc/bot/arquivos/$_file ]] && {
                            rm /etc/bot/arquivos/$_file
                            ShellBot.sendMessage --chat_id ${message_from_id[$id]} \
                                --text "✅ *Excluido con éxito* ✅" \
                                --parse_mode markdown
                        } || {
                            ShellBot.sendMessage --chat_id ${message_from_id[$id]} \
                                --text "$(echo -e "❌ Opcion invalida")" \
                                --parse_mode html
                        }
                    }
                    ;;
                '🔐 Cambiar Contraseña 🔐\nNombre de usuario:')
                    verifica_acesso
                    [[ "$_erro" == '1' ]] && break
                    fun_verif_user ${message_text[$id]}
                    [[ "$_erro" == '1' ]] && break
                    echo "${message_text[$id]}" >/tmp/name-s
                    ShellBot.sendMessage --chat_id ${message_from_id[$id]} \
                        --text 'Nueva Contraseña:' \
                        --reply_markup "$(ShellBot.ForceReply)"
                    ;;
                'Nueva Contraseña:')
                    verifica_acesso
                    [[ "$_erro" == '1' ]] && break
                    alterar_senha $(cat /tmp/name-s) ${message_text[$id]}
                    ShellBot.sendMessage --chat_id ${message_from_id[$id]} \
                        --text "$(echo -e "=×=×=×=×=×=×=×=×=×=×=×<b>✅ SENHA ALTERADA !</b> !=×=×=×=×=×=×=×=×=×=×=×\n<b>Usuario:</b> $(cat /tmp/name-s)\n<b>Nueva Senha:</b> ${message_text[$id]}")" \
                        --parse_mode html
                    rm /tmp/name-s >/dev/null 2>&1
                    ;;
                '⏳ Alterar Fecha ⏳\nNombre de usuario:')
                    verifica_acesso
                    [[ "$_erro" == '1' ]] && break
                    fun_verif_user ${message_text[$id]}
                    [[ "$_erro" == '1' ]] && break
                    echo "${message_text[$id]}" >/tmp/name-d
                    ShellBot.sendMessage --chat_id ${message_from_id[$id]} \
                        --text 'ingrese cantidad de dias:' \
                        --reply_markup "$(ShellBot.ForceReply)"
                    ;;
                'ingrese cantidad de dias:')
                    verifica_acesso
                    [[ "$_erro" == '1' ]] && break
                    [[ ${message_text[$id]} != ?(+|-)+([0-9/]) ]] && {
                        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                            --text "$(echo -e "❌ Error! Siga el ejemplo\nDias formato [Ej: 30]\nFormato dato [Ej: 30/12/2019]")" \
                            --parse_mode html
                        break
                    }
                    alterar_data_user $(cat /tmp/name-d) ${message_text[$id]}
                    [[ "$_erro" == '1' ]] && break
                    ShellBot.sendMessage --chat_id ${message_from_id[$id]} \
                        --text "$(echo -e "=×=×=×=×=×=×=×=×=×=×=×<b>✅ DATO ALTERADO !</b> !=×=×=×=×=×=×=×=×=×=×=×\n<b>Usuario:</b> $(cat /tmp/name-d)\n<b>Nueva Fecha:</b> $udata")" \
                        --parse_mode html
                    rm /tmp/name-d >/dev/null 2>&1
                    ;;
                '🗑 REMOVER USUARIO\nIngrese el nombre de usuario:')
                    verifica_acesso
                    [[ "$_erro" == '1' ]] && break
                    fun_del_user ${message_text[$id]}
                    [[ "$_erro" == '1' ]] && break
                    ShellBot.sendMessage --chat_id ${message_from_id[$id]} \
                        --text "✅ *Removido con éxito* 🚮" \
                        --parse_mode markdown
                    ;;
                '➕ CREAR REVENDEDOR\nIngrese el nombre [Ej: Nome]:')
                    [[ "${message_from_id[$id]}" != "$id_admin" ]] && break
                    echo "Nome: ${message_text[$id]}" > $CAD_ARQ
                    ShellBot.sendMessage --chat_id ${message_from_id[$id]} \
                        --text 'Ingrese el user [Ej: @smigolvip]:' \
                        --reply_markup "$(ShellBot.ForceReply)"
                    ;;
                'Ingrese el user [Ej: @smigolvip]:')
                    [[ "${message_from_id[$id]}" != "$id_admin" ]] && break
                    _VAR1=$(echo -e ${message_text[$id]}| awk -F '@' {'print $2'})
                    [[ -z $_VAR1 ]] && {
                        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                            --text "$(echo -e "❌ Error⚠️ Ingrese el user [Ej: @smigolvip]")" \
                            --parse_mode html
                        break
                    }
                    [[ -d /etc/bot/revenda/$_VAR1 ]] && {
                        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                            --text "$(echo -e "❌ EL Revendedor ${message_text[$id]} ya existe")" \
                            --parse_mode html
                        break
                    }
                    echo "User: ${message_text[$id]}" >>$CAD_ARQ
                    ShellBot.sendMessage --chat_id ${message_from_id[$id]} \
                        --text 'Límite de usuarios:' \
                        --reply_markup "$(ShellBot.ForceReply)"
                    ;;
                'Límite de usuarios:')
                    [[ "${message_from_id[$id]}" != "$id_admin" ]] && break
                    [[ ${message_text[$id]} != ?(+|-)+([0-9]) ]] && {
                        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                            --text "$(echo -e "❌ Error !⚠️ Utilize solo numeros [Ej: 1]")" \
                            --parse_mode html
                        break
                    }
                    echo "Limite: ${message_text[$id]}" >>$CAD_ARQ
                    ShellBot.sendMessage --chat_id ${message_from_id[$id]} \
                        --text 'Dias de validez:' \
                        --reply_markup "$(ShellBot.ForceReply)"
                    ;;
                'Dias de validez:')
                    [[ "${message_from_id[$id]}" != "$id_admin" ]] && break
                    [[ ${message_text[$id]} != ?(+|-)+([0-9]) ]] && {
                        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                            --text "$(echo -e "❌ Error !⚠️ Utilize solo numeros [Ej: 30]")" \
                            --parse_mode html
                        break
                    }
                    echo "Dias: ${message_text[$id]}" >>$CAD_ARQ
                    fun_add_revenda
                    ;;
                '🗑️ REMOVER REVENDEDOR\nIngrese el username [Ej: @user]:')
                    [[ "${message_from_id[$id]}" != "$id_admin" ]] && break
                    _cli_rev=$(echo ${message_text[$id]}| awk -F '@' {'print $2'})
                    [[ -z $_cli_rev ]] && {
                        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                            --text "$(echo -e "❌ Error⚠️ Ingrese el user [Ej: @user]")" \
                            --parse_mode html
                        break
                    }
                    fun_del_rev $_cli_rev
                    ;;
                '🔄 RENEVAR REVENDEDOR\nIngrese el username [Ej: @user]:')
                    [[ "${message_from_id[$id]}" != "$id_admin" ]] && break
                    _rev_usern=$(echo ${message_text[$id]}| awk -F '@' {'print $2}')
                    [[ -z $_rev_usern ]] && {
                        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                            --text "$(echo -e "❌ Error⚠️ Ingrese el user [Ej: @user]")" \
                            --parse_mode html
                        break
                    }
                    [[ -d /etc/bot/revenda/$_rev_usern ]] && {
                        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                            --text 'Nuevo limite:' \
                            --reply_markup "$(ShellBot.ForceReply)"
                    } || {
                        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                            --text "$(echo -e ❌ REVENDEDEDOR NO EXISTE ❌)" \
                            --parse_mode html
                    }
                    ;;
                'Nuevo limite:')
                    [[ "${message_from_id[$id]}" != "$id_admin" ]] && break
                    [[ ${message_text[$id]} != ?(+|-)+([0-9]) ]] && {
                        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                            --text "$(echo -e "❌ Error !⚠️ Utilize solo numeros [Ej: 1]")" \
                            --parse_mode html
                        break
                    }
                    new_l=${message_text[$id]}
                    _rev_usern=$(echo $(grep -w 'User' $CAD_ARQ| awk -F '@' {'print $2'}))
                    [[ -d /etc/bot/revenda/$_rev_usern ]] && {
                        l_old=$(grep -w 'LIMITE_REVENDA' /etc/bot/revenda/$_rev_usern/$_rev_usern| awk {'print $2'})
                        sed -i "/LIMITE_REVENDA/ s/$l_old/$new_l/g" /etc/bot/revenda/$_rev_usern/$_rev_usern
                        sed -i "/$_rev_usern/ s/LIMITE: $l_old/LIMITE: $new_l/" $ativos
                        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                            --text "$(echo -e "✅ LIMITE ALTERADO CON EXITO\n\nNuevo limite: $new_l")" \
                            --parse_mode html
                    } || {
                        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                            --text "$(echo -e ❌ REVENDEDEDOR NO EXISTE ❌)" \
                            --parse_mode html
                    }
                    ;;
                '⚠️ SUSPENDER REVENDEDOR\nIngrese el username [Ej: @user]:')
                    [[ "${message_from_id[$id]}" != "$id_admin" ]] && break
                    _revs=$(echo ${message_text[$id]}| awk -F '@' {'print $2'})
                    [[ -z $_revs ]] && {
                        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                            --text "$(echo -e "❌ Error⚠️ Ingrese el user [Ej: @user]")" \
                            --parse_mode html
                        break
                    }
                    [[ -d /etc/bot/revenda/$_revs ]] && {
                        [[ "$(ls /etc/bot/revenda/$_revs/usuarios| wc -l)" != '0' ]] && {
                            for _user_ in $(ls /etc/bot/revenda/$_revs/usuarios); do
                                usermod -L $_user_
                                pkill -f $_user_
                            done
                        }
                        mv /etc/bot/revenda/$_revs /etc/bot/suspensos/$_revs
                        grep -w "$_revs" $ativos >>$suspensos
                        sed -i "/\b$_revs\b/d" $ativos
                        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                            --text "$(echo -e "SUSPENDIDO CON ÉXITO")" \
                            --parse_mode html
                    } || {
                        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                            --text "$(echo -e ❌ REVENDEDEDOR NO EXISTE ❌)" \
                            --parse_mode html
                    }
                    ;;
                '✅ ATIVAR REVENDEDOR\nIngrese el username [Ej: @user]:')
                    [[ "${message_from_id[$id]}" != "$id_admin" ]] && break
                    _revd=$(echo ${message_text[$id]}| awk -F '@' {'print $2'})
                    [[ -z $_revd ]] && {
                        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                            --text "$(echo -e "❌ Error⚠️ Ingrese el user [Ej: @user]")" \
                            --parse_mode html
                        break
                    }
                    _datfile="/etc/bot/suspensos/$_revd/$_revd"
                    [[ ! -e $_datfile ]] && {
                        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                            --text "$(echo -e "❌ REVENDEDOR NO EXISTE ❌")" \
                            --parse_mode html
                        _erro='1'
                        break
                    }
                    _revd=$(grep -w 'Revendedor' $_datfile| cut -d'@' -f2)
                    new_d=$(grep -w 'Data' $_datfile| awk '{print $NF}')
                    [[ -d "/etc/bot/suspensos/$_revd" ]] && {
                        [[ "$(ls /etc/bot/suspensos/$_revd/usuarios| wc -l)" != '0' ]] && {
                            for _user in $(ls /etc/bot/suspensos/$_revd/usuarios); do
                                usermod -U $_user
                            done
                        }
                        d_old=$(grep -w 'DIAS_REVENDA' /etc/bot/suspensos/$_revd/$_revd| awk {'print $2'})
                        sed -i "/\b$_revd\b/ s/DIAS: $d_old/DIAS: $new_d/" $ativos
                        sed -i "/DIAS_REVENDA/ s/$d_old/$new_d/" /etc/bot/suspensos/$_revd/$_revd
                        mv /etc/bot/suspensos/$_revd /etc/bot/revenda/$_revd
                        sed -i "/\b$_revd\b/d" $suspensos
                        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                            --text "$(echo -e "⚠️ $_revd ESTABA SUSPENDIDO Y SE REACTIVÓ!")" \
                            --parse_mode html
                    } || {
                        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
                            --text "$(echo -e ❌ REVENDEDOR NO SUSPENDIDO ❌)" \
                            --parse_mode html
                    }
                    ;;
                '💾 RESTAURAR BACKUP\nDeseja restaurar ? [si| nao]')
                    Resp=${message_text[$id]}
                    [[ ${message_from_id[$id]} != ${id_admin} ]] && break
                    [[ $Resp != ?(+|-)+([a-z]) ]] && {
                        ShellBot.sendMessage --chat_id ${id_admin} \
                            --text "$(echo -e "❌ Error !⚠️ Ultilice solo si o no")" \
                            --parse_mode html
                        break
                    }
                    [[ "$Resp" = @(Si|si|SI) ]] && {
                        filebkp=$(ls /tmp| grep '.vps')
                        [[ -z "$filebkp" ]] && {
                            ShellBot.sendMessage --chat_id ${id_admin} \
                                --text "$(echo -e "❌ Nenhum arquivo de backup encontrado")" \
                                --parse_mode html
                            break
                        }
                        tar -xzvf /tmp/$filebkp -C /
                        ShellBot.sendMessage --chat_id ${id_admin} \
                            --text "✅ Backup restaurado com sucesso!" \
                            --parse_mode html
                    }
                    ;;
            esac
        }
    done
done
